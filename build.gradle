
plugins {
    id 'java-library'
    //id 'com.adarshr.test-logger' version '1.7.0'
    id 'org.asciidoctor.convert' version '1.5.9.2'
}

repositories {
  mavenCentral()
}

def cucumberVersion = '4.7.1'
def junitVersion = '5.5.2'
dependencies {
  implementation 'com.structurizr:structurizr-spring:1.3.0'
  implementation 'com.structurizr:structurizr-plantuml:1.3.0'
  implementation 'com.google.guava:guava:27.0-jre'
  implementation files("${System.getProperty('java.home')}/../lib/tools.jar")

  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junitVersion}"
  testImplementation 'org.assertj:assertj-core:3.13.2'
  testImplementation 'org.mockito:mockito-core:3.0.0'
  testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
  testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
  testImplementation "io.cucumber:cucumber-picocontainer:${cucumberVersion}"
  testImplementation 'org.slf4j:slf4j-log4j12:1.7.28'
  //testImplementation files('/Users/Carlos/Projects/Archidocs/repos/spring-petclinic/target/classes')
  //testImplementation fileTree(dir: '/Users/Carlos/Projects/Archidocs/repos/spring-petclinic/target/spring-petclinic-2.1.0.BUILD-SNAPSHOT/WEB-INF/lib', include: '*.jar')
  
  asciidoctor 'org.asciidoctor:asciidoctorj-diagram:1.5.18'
}

asciidoctor {
  requires 'asciidoctor-diagram'
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}

/*
testlogger {
    showStandardStreams true
}
*/

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}
task cucumber() {
  description 'Runs the Cucumber tests'
  dependsOn cleanTest, compileTestJava
  group 'verification'
  doLast {
    javaexec {
      main = "io.cucumber.core.cli.Main"
      classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', 'pretty', '--glue', 'com.krloxz.archidocs.test', 'src/test/resources']
    }
  }
}
